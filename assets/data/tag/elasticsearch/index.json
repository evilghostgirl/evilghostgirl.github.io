{"hash":"104e9957bb95154a061d53f76710e0efda2a910a","data":{"tag":{"id":"elasticsearch","title":"elasticsearch","path":"/tag/elasticsearch/","belongsTo":{"totalCount":1,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"id":"8fa5a7196f6a5cf6e3f3573332ce17ab","title":"Elasticsearch - kilka praktycznych przykładów wyszukiwań","datetime":"2020-09-07 22:56:24","path":"/elasticsearch-kilka-praktycznych-przykladow-wyszukiwan/","content":"<p>W dzisiejszym wpisie poruszę tematykę elasticsearch.  Jesli nie znasz tej technologii, zapraszam do przeczytania Getting Started zanim zaczniesz czytać ten post. </p>\n<h2 id=\"wstęp\">Wstęp</h2>\n<p>Elasticsearch to zaawansowany silnik wyszukiwań a jednocześnie baza danych pozwalająca na przechowywanie różnych typów danych. Wykorzystywana jest głównie przy komercyjnych wyszukiwarkach oraz przy gromadzeniu logów systemowych. Dzięki Elasticsearch, możesz wykonywać skomplikowane wyszukiwania, filtry i agregacje, a także wykorzystywać słowniki.</p>\n<h3 id=\"wstępne-ustalenia\">Wstępne ustalenia</h3>\n<p>Ogólnie myślę, że sensownie będzie zapisywać działania do plików, dzięki czemu będzie łatwiej zrekonstruować listę kroków. Warto utworzyć tworzyć osobny katalog na czas ćwiczeń. Całość prawdopodobnie złożę jako projekt na githubie, więc będzie dostępny do sklonowania. </p>\n<h3 id=\"przykładowy-use-case\">Przykładowy use case</h3>\n<p>Razem z moim trzyosobowym zespołem w ramach hobbystycznych praktyk rozwijaliśmy mini-platformę do wystawiania ogłoszeń. Jednym z wymagań była wyszukiwarka, dzięki której mozna wyszukiwać produkty: po tytule, slowach kluczowych, kategorii, cenie i lokalizacji. Zdecydowaliśmy się na elasticsearch, ponieważ wspiera wyszukiwanie pełnotekstowe i geograficzne.</p>\n<h3 id=\"setup\">Setup</h3>\n<p>Na potrzeby zabawy postawimy sobie 2 kontenery dockerowe z elasticem + kibaną. Zdefiniowaliśmy:</p>\n<ul>\n<li>1 kontener z elasticsearch w wersji 7.8.0</li>\n<li>1 kontener z kibaną w wersji 7.6.0</li>\n<li>2 woluminy, na których będą przechowywane dane</li>\n<li>sieć o nazwie elastic-network\nWersje nie są najnowsze, ale akurat miałam te obrazy lokalnie na komputerze. Można w razie czego zmienić na nowszą.</li>\n</ul>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #8FBCBB\">version</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">2.2</span><span style=\"color: #ECEFF4\">'</span>\n<span style=\"color: #8FBCBB\">services</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">es01</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">image</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">docker.elastic.co/elasticsearch/elasticsearch:7.8.0</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">environment</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #ECEFF4\">- </span><span style=\"color: #A3BE8C\">bootstrap.memory_lock=true</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #ECEFF4\">- </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ES_JAVA_OPTS=-Xms512m -Xmx512m</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #ECEFF4\">- </span><span style=\"color: #A3BE8C\">discovery.type=single-node</span>\n<span style=\"color: #D8DEE9FF\"> </span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">volumes</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #ECEFF4\">- </span><span style=\"color: #A3BE8C\">data01:/usr/share/elasticsearch/data</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">ports</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #ECEFF4\">- </span><span style=\"color: #A3BE8C\">9200:9200</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">networks</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #ECEFF4\">- </span><span style=\"color: #A3BE8C\">elastic-network</span>\n<span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">kibana01</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">image</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">docker.elastic.co/kibana/kibana:7.6.0</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">container_name</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">kib01</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">ports</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #ECEFF4\">- </span><span style=\"color: #A3BE8C\">5601:5601</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">environment</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #8FBCBB\">ELASTICSEARCH_URL</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">http://es01:9200</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #8FBCBB\">ELASTICSEARCH_HOSTS</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">http://es01:9200</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">depends_on</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #ECEFF4\">- </span><span style=\"color: #A3BE8C\">es01</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">networks</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #ECEFF4\">- </span><span style=\"color: #A3BE8C\">elastic-network</span>\n<span style=\"color: #D8DEE9FF\"> </span>\n<span style=\"color: #8FBCBB\">volumes</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">data01</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">driver</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">local</span>\n<span style=\"color: #D8DEE9FF\"> </span>\n<span style=\"color: #8FBCBB\">networks</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">elastic-network</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #8FBCBB\">driver</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">bridge</span></code></pre>\n<p>Przeklejamy powyższy plik do docker-compose.yml i zapisujemy. Posiadamy już deklaratywny plik, na podstawie którego docker-compose utworzy wszystko za nas.\nWykonujemy polecenie (dla osób z słabszym internetem - może trochę potrwać, bo pobierają się obrazy):</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">docker-compose up</span></code></pre>\n<p>Sprawdzamy czy wszystko działa:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">docker ps</span></code></pre>\n<p>Powinny się nam pojawić 2 działajace kontenery. Jeśli tak, to fajnie. :)</p>\n<h3 id=\"model-danych\">Model danych</h3>\n<p>Zanim cokolwiek ciekawego zaczniemy robić, musimy zamodelować nasze dane. </p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">              &quot;title&quot;: &quot;text&quot;\n               &quot;description&quot;: &quot;text&quot;\n               &quot;location&quot;:&quot;geo_point&quot;\n               &quot;price&quot;: &quot;double&quot;</code>\n<p>Idziemy w maksymalne uproszczenie schematu. Myślę, że model jest dość czytelny. Id zostanie dodane automatycznie. Mamy title i description o typie text, location jest punktem (x,y), który można osadzić na mapie, price to cena - double. Tyle na teraz wystarczy.</p>\n<h3 id=\"mappingi--typy\">Mappingi &#x26; Typy</h3>\n<p>W Elasticu nasz “scheme” definiujemy za pomocą mappingów. Określamy w nich strukturę dokumentów (np offer ). W mappingach można również zawrzeć w nich dodatkowe techniczne ustawienia - ilość replik, timeouty. Dawniej w jednym indexie mozna było przechowywać wiele typów, co powodowało czasem dziwne błędy. Jednak w najnowszych wersjach elastica, jest jeden “typ” per index. Da się to ominąć, znajdziesz to w <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/removal-of-types.html#_custom_type_field.\" title=\"dokumentacji\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dokumentacji</a>.</p>\n<p>Zapisujemy poniższą składnię w pliku offer_mapping.json. Umożliwi to nam stworzenie indeksu. Wykorzystamy go za chwile. </p>\n<p>{\n\"mappings\": {\n\"properties\": {\n\"title\": {\n\"type\": \"text\"\n},\n\"description\": {\n\"type\": \"text\"\n},\n\"location\": {\n\"type\": \"geo_point\"\n},\n\"price\": {\n\"type\": \"double\"\n}\n}\n}\n}</p>\n<p>Wykonujemy komendę, tworząc tym samym nowy index.</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">curl -H </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Content-Type: application/json</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> -X PUT http://localhost:3000/offers --data </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">@offer_schema.json</span><span style=\"color: #ECEFF4\">\"</span></code></pre>\n<p>W dalszej części do wykonywania requestów będę już używać devtoolsów w kibanie, bo będzie czytelniej. Jeśli nie chcesz tego używać i wolisz CLI, z łatwością wykonasz requesty np. curlem, jak powyżej.</p>\n<h3 id=\"feedowanie-danych\">Feedowanie danych</h3>\n<p>Poniżej mini-zbiór danych do sprawdzenia, jak to działa.</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">POST offers/_doc\n{\n              &quot;title&quot;: &quot;skarpety rozmiar 36&quot;,\n              &quot;description&quot;: &quot;kolorowe skarpetki w kropki&quot;,\n              &quot;location&quot;:  {\n                 &quot;lat&quot; : 40, \n                 &quot;lon&quot; : -70\n               },\n              &quot;price&quot;: 10.00\n}\n\nPOST offers/_doc\n{\n               &quot;title&quot;: &quot;szelki&quot;,\n               &quot;description&quot;: &quot;szelki w kolorze czarnym, rozmiar XS&quot;,\n               &quot;location&quot;:  {\n                 &quot;lat&quot; : 50, \n                 &quot;lon&quot; : -40\n               },\n               &quot;price&quot;: 14.00\n\n}\n\nPOST offers/_doc\n{\n               &quot;title&quot;: &quot;muszka&quot;,\n               &quot;description&quot;: &quot;czerwona, męska&quot;,\n               &quot;location&quot;:  {\n                 &quot;lat&quot; : 50, \n                 &quot;lon&quot; : -30\n               },\n               &quot;price&quot;: 130.00\n\n}</code>\n<p><a href=\"link.xd\" title=\"Tak wyglądają devtoolsy\"><img src=\"link.xd\" alt=\"Tak wyglądają devtoolsy\" title=\"Tak wyglądają devtoolsy\"></a></p>\n<p>Teraz możemy wykonać zapytania o to, czego potrzebujemy.</p>\n<h3 id=\"scenariusze-z-życia-wzięte\">Scenariusze z życia wzięte:</h3>\n<h4 id=\"użytkownik-wyszukuje-pełnotekstowo-po-tytule-oferty\">Użytkownik wyszukuje pełnotekstowo po tytule oferty:</h4>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">GET offers/_search\n{\n  &quot;query&quot;: {\n    &quot;match&quot;: {\n      &quot;title&quot;: &quot;skarpetki&quot;\n    }\n  }\n}</code>\n<p>Odpowiedź z serwera, widzimy znaleziony rekord, ponieważ w tytule zawarte jest słowo \"skarpetki\":</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">{\n  &quot;took&quot; : 1,\n  &quot;timed_out&quot; : false,\n  &quot;_shards&quot; : {\n    &quot;total&quot; : 1,\n    &quot;successful&quot; : 1,\n    &quot;skipped&quot; : 0,\n    &quot;failed&quot; : 0\n  },\n  &quot;hits&quot; : {\n    &quot;total&quot; : {\n      &quot;value&quot; : 1,\n      &quot;relation&quot; : &quot;eq&quot;\n    },\n    &quot;max_score&quot; : 0.7389809,\n    &quot;hits&quot; : [\n      {\n        &quot;_index&quot; : &quot;offers&quot;,\n        &quot;_type&quot; : &quot;_doc&quot;,\n        &quot;_id&quot; : &quot;QiyNanQB6SAY5Ir04SbI&quot;,\n        &quot;_score&quot; : 0.7389809,\n        &quot;_source&quot; : {\n          &quot;title&quot; : &quot;skarpety rozmiar 36&quot;,\n          &quot;description&quot; : &quot;kolorowe skarpetki w kropki&quot;,\n          &quot;location&quot; : {\n            &quot;lat&quot; : 40,\n            &quot;lon&quot; : -70\n          },\n          &quot;price&quot; : 10.0\n        }\n      }\n    ]\n  }\n}</code>\n<h4 id=\"użytkownik-w-filtrach-wybiera-zakres-cenowy\">Użytkownik w filtrach wybiera zakres cenowy</h4>\n<p>Ustalamy:</p>\n<ul>\n<li>gte (greater than or equal) - większe lub równe 10, </li>\n<li>lte (lower than or equal) - mniejsze lub równe 20</li>\n</ul>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">GET offers/_search\n{\n    &quot;query&quot;: {\n        &quot;range&quot; : {\n            &quot;price&quot; : {\n                &quot;gte&quot; : 10,\n                &quot;lte&quot; : 20,\n                &quot;boost&quot; : 2.0\n            }\n        }\n    }\n}</code>\n<p>Znalezione 2 oferty, z ceną większą niż 10 ale mniejszą niż 20.</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">{\n  &quot;took&quot; : 1,\n  &quot;timed_out&quot; : false,\n  &quot;_shards&quot; : {\n    &quot;total&quot; : 1,\n    &quot;successful&quot; : 1,\n    &quot;skipped&quot; : 0,\n    &quot;failed&quot; : 0\n  },\n  &quot;hits&quot; : {\n    &quot;total&quot; : {\n      &quot;value&quot; : 2,\n      &quot;relation&quot; : &quot;eq&quot;\n    },\n    &quot;max_score&quot; : 2.0,\n    &quot;hits&quot; : [\n      {\n        &quot;_index&quot; : &quot;offers&quot;,\n        &quot;_type&quot; : &quot;_doc&quot;,\n        &quot;_id&quot; : &quot;QiyNanQB6SAY5Ir04SbI&quot;,\n        &quot;_score&quot; : 2.0,\n        &quot;_source&quot; : {\n          &quot;title&quot; : &quot;skarpety rozmiar 36&quot;,\n          &quot;description&quot; : &quot;kolorowe skarpetki w kropki&quot;,\n          &quot;location&quot; : {\n            &quot;lat&quot; : 40,\n            &quot;lon&quot; : -70\n          },\n          &quot;price&quot; : 10.0\n        }\n      },\n      {\n        &quot;_index&quot; : &quot;offers&quot;,\n        &quot;_type&quot; : &quot;_doc&quot;,\n        &quot;_id&quot; : &quot;RCyNanQB6SAY5Ir07CYY&quot;,\n        &quot;_score&quot; : 2.0,\n        &quot;_source&quot; : {\n          &quot;title&quot; : &quot;szelki&quot;,\n          &quot;description&quot; : &quot;szelki w kolorze czarnym, rozmiar XS&quot;,\n          &quot;location&quot; : {\n            &quot;lat&quot; : 50,\n            &quot;lon&quot; : -40\n          },\n          &quot;price&quot; : 14.0\n        }\n      }\n    ]\n  }\n}</code>\n<h4 id=\"szukanie-po-lokalizacji\">Szukanie po lokalizacji:</h4>\n<p>Chcemy znaleźć oferty w promieniu 100km od miejscowości o współrzędnych [-70.001, 40.002]</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">GET offers/_search\n{\n    &quot;query&quot;: {\n        &quot;bool&quot; : {\n            &quot;must&quot; : {\n                &quot;match_all&quot; : {}\n            },\n            &quot;filter&quot; : {\n                &quot;geo_distance&quot; : {\n                    &quot;distance&quot; : &quot;100km&quot;,\n                    &quot;location&quot; : [-70.001, 40.002]\n                }\n            }\n        }\n    }\n}</code>\n<p>Odpowiedź z serwera:</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">{\n  &quot;took&quot; : 1,\n  &quot;timed_out&quot; : false,\n  &quot;_shards&quot; : {\n    &quot;total&quot; : 1,\n    &quot;successful&quot; : 1,\n    &quot;skipped&quot; : 0,\n    &quot;failed&quot; : 0\n  },\n  &quot;hits&quot; : {\n    &quot;total&quot; : {\n      &quot;value&quot; : 1,\n      &quot;relation&quot; : &quot;eq&quot;\n    },\n    &quot;max_score&quot; : 1.0,\n    &quot;hits&quot; : [\n      {\n        &quot;_index&quot; : &quot;offers&quot;,\n        &quot;_type&quot; : &quot;_doc&quot;,\n        &quot;_id&quot; : &quot;-SyVanQB6SAY5Ir0BSZs&quot;,\n        &quot;_score&quot; : 1.0,\n        &quot;_source&quot; : {\n          &quot;title&quot; : &quot;skarpety rozmiar 36&quot;,\n          &quot;description&quot; : &quot;kolorowe skarpetki w kropki&quot;,\n          &quot;location&quot; : {\n            &quot;lat&quot; : 40,\n            &quot;lon&quot; : -70\n          },\n          &quot;price&quot; : 10.0\n        }\n      }\n    ]\n  }\n}</code>\n<p>Znalazło 1 rekord o współrzędnych [-70, 40].</p>\n<h4 id=\"wyszukiwanie-również-w-opisie\">Wyszukiwanie również w opisie</h4>\n<p>Mamy 1 rekord, który w tytule ma \"skarpety\" a w opisie \"skarpetki\". Chcemy go wyszukać po opisie. Ogólnie da się skonfigurować, żeby wyszukiwało pochodne słowa od skarpety, ale to może w innym poście :)</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">GET offers/_search\n{\n  &quot;query&quot;: {\n    &quot;multi_match&quot; : {\n      &quot;query&quot;:    &quot;skarpetki&quot;, \n      &quot;fields&quot;: [ &quot;title&quot;, &quot;description&quot; ] \n    }\n  }\n}</code>\n<p>No i mamy znalezione skarpetki.</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">{\n  &quot;took&quot; : 0,\n  &quot;timed_out&quot; : false,\n  &quot;_shards&quot; : {\n    &quot;total&quot; : 1,\n    &quot;successful&quot; : 1,\n    &quot;skipped&quot; : 0,\n    &quot;failed&quot; : 0\n  },\n  &quot;hits&quot; : {\n    &quot;total&quot; : {\n      &quot;value&quot; : 1,\n      &quot;relation&quot; : &quot;eq&quot;\n    },\n    &quot;max_score&quot; : 0.9808291,\n    &quot;hits&quot; : [\n      {\n        &quot;_index&quot; : &quot;offers&quot;,\n        &quot;_type&quot; : &quot;_doc&quot;,\n        &quot;_id&quot; : &quot;-SyVanQB6SAY5Ir0BSZs&quot;,\n        &quot;_score&quot; : 0.9808291,\n        &quot;_source&quot; : {\n          &quot;title&quot; : &quot;skarpety rozmiar 36&quot;,\n          &quot;description&quot; : &quot;kolorowe skarpetki w kropki&quot;,\n          &quot;location&quot; : {\n            &quot;lat&quot; : 40,\n            &quot;lon&quot; : -70\n          },\n          &quot;price&quot; : 10.0\n        }\n      }\n    ]\n  }\n}</code>\n<p>To tyle na dziś. Jako czytelnik różnych blogów lubię, gdy jest dużo przykładów, więc też w takiej formie postanowiłam stworzyć wpis. Będę testować, czy przyjemniej mi się tak pisze.</p>\n","excerpt":"","description":"Przykłady zapytań do elasticsearcha","cover":"/images/posts/elasticsearch-zapytania/searching.jpg","timeToRead":5,"author":{"id":"Julia","title":"Julia","path":"/author/Julia/"}}}]}}},"context":{}}